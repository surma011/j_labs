ЛАБОРАТОРНАЯ РАБОТА 8

Описание задачи:
1) В отдельных проектах выполнить примеры 1 – 10 лабораторной работы. Протестировать программы с помощью отладчика. Выявить различие в работе программ в примерах 7 и 8.

1.1) Создание файлов и папок.

1.2) Прочитать и вывести на экран информацию из трех источников: файла на диске, интернет-страницы и массива типа byte.

1.3) Прочитать и вывести на экран информацию из предварительно созданного файла с использованием буфера в 5 байт.

1.4) Создать первый файл на диске и записать в него заданное количество вещественных чисел. Далее создать второй файл и переписать в него все числа из первого файла.

1.5) Создать файл на диске, ввести заданное с клавиатуры количество строк текста и записать их в файл в формате UTF-8.

1.6) Чтение из одного файла и запись в другой файл данных посимвольно.

1.7) Чтение из одного файла и запись в другой файл данных построчно с использованием буфера в 1 килобайт.

1.8) Прочитать и вывести на экран информацию из трех источников: файла на диске, интернет-страницы и массива данных типа byte. Указать кодировку, поддерживающую кириллицу. (Сравнить с работой программы, приведенной в примере 2.)

1.9) Чтение из одного файла и запись в другой файл данных построчно с использованием буферизации символьных потоков основанных на байтовых файловых потоках.

1.10) Выполнить чтение из одного файла и запись в другой файл с использованием класса PrintWriter.

2) Создать проект, позволяющий из одного, предварительно созданного программными средствами файла, переписать данные, соответствующие условию - в исходном файле содержится две строки в формате UTF-8 и 5 чисел типа double. В результирующий файл переписать вторую строку и положительные числа.

3) Создать проект, позволяющий из одного текстового файла, содержащего несколько строк (тип String) заранее подготовленного текста на русском языке (Пушкин, Лермонтов или другой российсмки классик на Ваш вкус), построчно переписать в другой текстовый файл слова начинающиеся с согласных букв.
  Требования:
    – слова из предложения выделять методом split();
    – в новом файле следует указать номер строки, в которой искомые слова находились в исходном файле;
    – для каждой строки указать количество выбранных слов.
